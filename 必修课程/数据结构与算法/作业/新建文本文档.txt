1-1	名词解释：数据结构。

数据结构是相互之间存在一种或多种特定关系的数据元素的集合。数据结构研究数据元素之间的相互关系，以及定义在其上的一组基本操作。

1-2	数据结构的基本逻辑结构包括哪四种?

集合结构：属于一个集合
线性结构：一对一的线性关系
树形结构：一对多的层次关系
图状（网状）结构：多对多的任意关系

1-4 算法包括哪五种特性?

   确定性、有穷性、可行性、输入项、输出项

1-5 简述算法及其时间复杂度。

    算法(Algorithm)是规则的有限集合，是求解特定问题的过程描述、操作步骤或指令序列。
    时间复杂度：一般情况下，算法基本操作重复执行次数是问题规模n的某个函数，它表示随着问题规模n的增大，树算法执行时间的增长率和函数增长率相同，称为算法的渐进时间复杂度，简称时间复杂度。

2-3 已知Ann为稀疏矩阵。试从时间和空间角度比较，采用二维数组和三元组顺序表两种存储结构计算∑aij的优缺点。
   答：
   设矩阵m行n列，二维数组空间复杂度O(m×n)，计算∑aij需要遍历这个二维数组，需要两层嵌套循环，其时间复杂度也为O(m×n)
   设矩阵有t个非零元素，同理，三元组顺序表空间复杂度和时间复杂度为O(t)。
   二维数组代码更好理解，但如果t<m×n，三元组顺序表在空间上和时间上性能都更好。
2-4 综合比较顺序表和链表。
    顺序表：
            1.内存地址连续，已知任意元素地址可以推出其他元素地址
            2.长度不可改变，因此会造成一定的空间浪费（开辟的空间没有都用上）
            3.支持随机访问
            4.适合需要大量访问元素而增添删除少的程序。
            5. 顺序表的存储密度为1，存储空间利用率高
            6.增添、删除时需要移动大量结点
    链表：
            1.逻辑位置相邻的结点在物理位置上不一定相邻，即内存地址不连续。
            2.长度可以改变
            3.不支持随机查找
            4.适合需要大量增添、删除元素而对访问元素要求不高的程序。
            5．链表的存储密度小于1，空间利用率低。
2-5 解释链表的“头指针、头结点和首元素结点”三个概念。
头结点：   有时在链表的第一个结点之前会额外增设一个结点，结点的数据域一般不存放数据（有些情况下也可以存放链表的长度等信息），此结点被称为头结点。
首元结点：链表中第一个元素所在的结点，它是头结点后边的第一个结点。
头指针：   永远指向链表中第一个结点的位置（如果链表有头结点，头指针指向头结点；否则，头指针指向首元结点）。


void test(int &s)
{
   int x;
   int s=0;
    do
   {
    scanf(“%d”,&x);
    if(x!=0)s=s+x;
   } while(x!=0)
 }//多个输入值相加